<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_c_h_a_n_g_e_l_o_g_8md" kind="file" language="Markdown">
    <compoundname>CHANGELOG.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Castle<sp/>Core<sp/>Changelog</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>5.1.1<sp/>(2022-12-30)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Proxies<sp/>using<sp/>records<sp/>derived<sp/>from<sp/>a<sp/>base<sp/>generic<sp/>record<sp/>broken<sp/>using<sp/>.NET<sp/>6<sp/>compiler<sp/>(@CesarD,<sp/>#632)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Failure<sp/>proxying<sp/>type<sp/>that<sp/>has<sp/>a<sp/>non-inheritable<sp/>custom<sp/>attribute<sp/>type<sp/>applied<sp/>where<sp/>`null`<sp/>argument<sp/>is<sp/>given<sp/>for<sp/>array<sp/>parameter<sp/><sp/>(@stakx,<sp/>#637)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Nested<sp/>custom<sp/>attribute<sp/>types<sp/>do<sp/>not<sp/>get<sp/>replicated<sp/>(@stakx,<sp/>#638)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>5.1.0<sp/>(2022-08-02)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enhancements:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Support<sp/>for<sp/>covariant<sp/>method<sp/>returns<sp/>(@stakx,<sp/>#619)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Performance<sp/>improvement<sp/>with<sp/>proxy<sp/>type<sp/>generation<sp/>for<sp/>class<sp/>proxies<sp/>(without<sp/>target).<sp/>Abstract<sp/>class<sp/>methods<sp/>now<sp/>reuse<sp/>a<sp/>predefined<sp/>invocation<sp/>type<sp/>(like<sp/>methods<sp/>of<sp/>interface<sp/>proxies<sp/>without<sp/>target;<sp/>see<sp/>explanation<sp/>below<sp/>at<sp/>version<sp/>5.0.0<sp/>enhancements)<sp/>(@stakx,<sp/>#626)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>DynamicProxy<sp/>emits<sp/>invalid<sp/>metadata<sp/>for<sp/>redeclared<sp/>event<sp/>(@stakx,<sp/>#590)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Proxies<sp/>using<sp/>records<sp/>with<sp/>a<sp/>base<sp/>class<sp/>broken<sp/>using<sp/>.NET<sp/>6<sp/>compiler<sp/>(@ajcvickers,<sp/>#601)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`MissingMethodException`<sp/>when<sp/>proxying<sp/>interfaces<sp/>containing<sp/>sealed<sp/>methods<sp/>(@stakx,<sp/>#621)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>5.0.0<sp/>(2022-05-11)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enhancements:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>.NET<sp/>6.0<sp/>support<sp/>(@Jevonius,<sp/>#616)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>.NET<sp/>Standard<sp/>2.0<sp/>and<sp/>2.1<sp/>support<sp/>(@lg2de,<sp/>#485)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Non-intercepted<sp/>methods<sp/>on<sp/>a<sp/>class<sp/>proxy<sp/>with<sp/>target<sp/>are<sp/>now<sp/>forwarded<sp/>to<sp/>the<sp/>target<sp/>(@stakx,<sp/>#571)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Significant<sp/>performance<sp/>improvements<sp/>with<sp/>proxy<sp/>type<sp/>generation<sp/>for<sp/>interface<sp/>proxies<sp/>without<sp/>target.<sp/>Up<sp/>until<sp/>now,<sp/>DynamicProxy<sp/>generated<sp/>a<sp/>separate<sp/>`IInvocation`<sp/>implementation<sp/>type<sp/>for<sp/>every<sp/>single<sp/>proxied<sp/>method<sp/>&amp;ndash;<sp/>it<sp/>is<sp/>now<sp/>able<sp/>to<sp/>reuse<sp/>a<sp/>single<sp/>predefined<sp/>type<sp/>in<sp/>many<sp/>cases,<sp/>thereby<sp/>reducing<sp/>the<sp/>total<sp/>amount<sp/>of<sp/>dynamic<sp/>type<sp/>generation.<sp/>(@stakx,<sp/>#573)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Generic<sp/>method<sp/>with<sp/>differently<sp/>named<sp/>generic<sp/>arguments<sp/>to<sp/>parent<sp/>throws<sp/>`KeyNotFoundException`<sp/>(@stakx,<sp/>#106)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Proxying<sp/>certain<sp/>`[Serializable]`<sp/>classes<sp/>produces<sp/>proxy<sp/>types<sp/>that<sp/>fail<sp/>PEVerify<sp/>test<sp/>(@stakx,<sp/>#367)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`private<sp/>protected`<sp/>methods<sp/>are<sp/>not<sp/>intercepted<sp/>(@CrispyDrone,<sp/>#535)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`System.UIntPtr`<sp/>unsupported<sp/>(@stakx,<sp/>#546)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>DynamicProxy<sp/>generates<sp/>two<sp/>modules<sp/>when<sp/>proceeding<sp/>from<sp/>a<sp/>class<sp/>proxy&apos;s<sp/>protected<sp/>method<sp/>to<sp/>the<sp/>target,<sp/>causing<sp/>an<sp/>`InvalidOperationException`<sp/>when<sp/>saving<sp/>the<sp/>generated<sp/>assembly<sp/>to<sp/>disk<sp/>(@stakx,<sp/>#569)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Upgrade<sp/>log4net<sp/>to<sp/>v2.0.13<sp/>(@jonorossi,<sp/>@stakx,<sp/>@dschwartzni,<sp/>#574,<sp/>#605)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Deprecations:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Removed<sp/>support<sp/>for<sp/>the<sp/>.NET<sp/>Framework<sp/>&lt;<sp/>4.6.2<sp/>and<sp/>.NET<sp/>Standard<sp/>1.x.<sp/>(@stakx,<sp/>#495,<sp/>#496;<sp/>@Jevonius,<sp/>#614)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Removed<sp/>support<sp/>for<sp/>Code<sp/>Access<sp/>Security<sp/>(CAS).<sp/>(@stakx,<sp/>#502)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Removed<sp/>support<sp/>for<sp/>Remoting.<sp/>This<sp/>library<sp/>no<sp/>longer<sp/>defines<sp/>any<sp/>types<sp/>deriving<sp/>from<sp/>`MarshalByRefObject`,<sp/>and<sp/>`ProxyUtil.IsProxy`<sp/>(which<sp/>used<sp/>to<sp/>recognize<sp/>remoting/&quot;transparent&quot;<sp/>proxies)<sp/>now<sp/>tests<sp/>only<sp/>for<sp/>DynamicProxy<sp/>proxies.<sp/>(@stakx,<sp/>#507)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>The<sp/>following<sp/>public<sp/>members<sp/>have<sp/>been<sp/>removed:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`Castle.Core.Internal.CollectionExtensions`<sp/>(class)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`Castle.Core.Internal.Lock`<sp/>(class)<sp/>along<sp/>with<sp/>all<sp/>related<sp/>types<sp/>and<sp/>methods</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`Castle.Core.Internal.PermissionUtil.IsGranted`<sp/>(method)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`Castle.Core.Pair&lt;,&gt;`<sp/>(type).<sp/>Use<sp/>`System.ValueTuple&lt;,&gt;`<sp/>or<sp/>`System.Tuple&lt;,&gt;`<sp/>instead.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>all<sp/>type<sp/>members<sp/>in<sp/>`Castle.DynamicProxy.ModuleScope`<sp/>that<sp/>gave<sp/>direct<sp/>access<sp/>to<sp/>DynamicProxy&apos;s<sp/>type<sp/>cache<sp/>and<sp/>`ModuleBuilder`s.<sp/>Only<sp/>`SaveAssembly`,<sp/>`LoadAssemblyIntoCache`,<sp/>and<sp/>members<sp/>supporting<sp/>these<sp/>two<sp/>facilities<sp/>are<sp/>left<sp/>public.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>almost<sp/>all<sp/>types<sp/>and<sp/>type<sp/>members<sp/>in<sp/>the<sp/>`Castle.DynamicProxy.*`<sp/>sub-namespaces,<sp/>as<sp/>most<sp/>of<sp/>them<sp/>are<sp/>intended<sp/>for<sp/>internal<sp/>use<sp/>only.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>DynamicProxy&apos;s<sp/>custom<sp/>exception<sp/>types<sp/>have<sp/>been<sp/>replaced<sp/>by<sp/>standard<sp/>BCL<sp/>exceptions<sp/>(where<sp/>appropriate),<sp/>and<sp/>by<sp/>a<sp/>single<sp/>`DynamicProxyException`<sp/>type<sp/>for<sp/>internal<sp/>DynamicProxy<sp/>errors.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.4.1<sp/>(2020-05-06)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Prevent<sp/>method<sp/>name<sp/>collisions<sp/>when<sp/>a<sp/>proxy<sp/>type<sp/>implements<sp/>more<sp/>than<sp/>two<sp/>identically<sp/>named<sp/>interfaces<sp/>having<sp/>one<sp/>or<sp/>more<sp/>identically<sp/>named<sp/>methods<sp/>each.<sp/>Name<sp/>collisions<sp/>are<sp/>avoided<sp/>by<sp/>including<sp/>the<sp/>declaring<sp/>types&apos;<sp/>namespaces<sp/>in<sp/>the<sp/>proxy<sp/>type&apos;s<sp/>method<sp/>names.<sp/>(@stakx,<sp/>#469)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Reduce<sp/>lock<sp/>contention<sp/>while<sp/>generating<sp/>new<sp/>proxy<sp/>types<sp/>which<sp/>previously<sp/>blocked<sp/>new<sp/>proxy<sp/>instances<sp/>(@tangdf,<sp/>#484)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>mixins<sp/>where<sp/>proxy<sp/>constructor<sp/>fields<sp/>were<sp/>ordered<sp/>differently<sp/>to<sp/>interfaces<sp/>because<sp/>of<sp/>different<sp/>case<sp/>comparisons<sp/>(@zapov,<sp/>#475)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>proxy<sp/>generation<sp/>for<sp/>types<sp/>having<sp/>only<sp/>a<sp/>`private<sp/>protected`<sp/>constructor<sp/>(@mriehm,<sp/>#491)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.4.0<sp/>(2019-04-05)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enhancements:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>trace<sp/>logging<sp/>level<sp/>below<sp/>Debug;<sp/>maps<sp/>to<sp/>Trace<sp/>in<sp/>log4net/NLog,<sp/>and<sp/>Verbose<sp/>in<sp/>Serilog<sp/>(@pi3k14,<sp/>#404)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Recognize<sp/>read-only<sp/>parameters<sp/>by<sp/>the<sp/>`In`<sp/>modreq<sp/>(@zvirja,<sp/>#406)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>DictionaryAdapter:<sp/>Exposed<sp/>GetAdapter<sp/>overloads<sp/>with<sp/>NameValueCollection<sp/>parameter<sp/>in<sp/>.NET<sp/>Standard<sp/>(@rzontar,<sp/>#423)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Ability<sp/>to<sp/>add<sp/>delegate<sp/>mixins<sp/>to<sp/>proxies<sp/>using<sp/>`ProxyGenerationOptions.AddDelegate[Type]Mixin`.<sp/>You<sp/>can<sp/>bind<sp/>to<sp/>the<sp/>mixed-in<sp/>`Invoke`<sp/>methods<sp/>on<sp/>the<sp/>proxy<sp/>using<sp/>`ProxyUtil.CreateDelegateToMixin`.<sp/>(@stakx,<sp/>#436)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>New<sp/>`IInvocation.CaptureProceedInfo()`<sp/>method<sp/>to<sp/>enable<sp/>better<sp/>implementations<sp/>of<sp/>asynchronous<sp/>interceptors<sp/>(@stakx,<sp/>#439)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Deprecations:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>The<sp/>API<sp/>surrounding<sp/>`Lock`<sp/>has<sp/>been<sp/>deprecated.<sp/>This<sp/>consists<sp/>of<sp/>the<sp/>members<sp/>listed<sp/>below.<sp/>Consider<sp/>using<sp/>the<sp/>Base<sp/>Class<sp/>Library&apos;s<sp/>`System.Threading.ReaderWriterLockSlim`<sp/>instead.<sp/>(@stakx,<sp/>#391)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.Core.Internal.Lock`<sp/>(class)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.Core.Internal.ILockHolder`<sp/>(interface)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.Core.Internal.IUpgradeableLockHolder`<sp/>(interface)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>should<sp/>no<sp/>longer<sp/>manually<sp/>emit<sp/>types<sp/>into<sp/>DynamicProxy&apos;s<sp/>dynamic<sp/>assembly.<sp/>For<sp/>this<sp/>reason,<sp/>the<sp/>following<sp/>member<sp/>has<sp/>been<sp/>deprecated.<sp/>(@stakx,<sp/>#445)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.DynamicProxy.ModuleScope.DefineType`<sp/>(method)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>The<sp/>proxy<sp/>type<sp/>cache<sp/>in<sp/>`ModuleScope`<sp/>should<sp/>no<sp/>longer<sp/>be<sp/>accessed<sp/>directly.<sp/>For<sp/>this<sp/>reason,<sp/>the<sp/>members<sp/>listed<sp/>below<sp/>have<sp/>been<sp/>deprecated.<sp/>(@stakx,<sp/>#391)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.DynamicProxy.ModuleScope.Lock`<sp/>(property)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.DynamicProxy.ModuleScope.GetFromCache`<sp/>(method)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.DynamicProxy.ModuleScope.RegisterInCache`<sp/>(method)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.DynamicProxy.Generators.BaseProxyGenerator.AddToCache`<sp/>(method)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.DynamicProxy.Generators.BaseProxyGenerator.GetFromCache`<sp/>(method)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.DynamicProxy.Generators.CacheKey`<sp/>(class)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.DynamicProxy.Serialization.CacheMappingsAttribute.ApplyTo`<sp/>(method)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>`Castle.DynamicProxy.Serialization.CacheMappingsAttribute.GetDeserializedMappings`<sp/>(method)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.3.1<sp/>(2018-06-21)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enhancements:</highlight></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>Use<sp/>shared<sp/>read<sp/>locking<sp/>to<sp/>reduce<sp/>lock<sp/>contention<sp/>in<sp/>InvocationHelper<sp/>and<sp/>ProxyUtil<sp/>(@TimLovellSmith,<sp/>#377)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Prevent<sp/>interceptors<sp/>from<sp/>being<sp/>able<sp/>to<sp/>modify<sp/>`in`<sp/>parameters<sp/>(@stakx,<sp/>#370)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Make<sp/>default<sp/>value<sp/>replication<sp/>of<sp/>optional<sp/>parameters<sp/>more<sp/>tolerant<sp/>of<sp/>default<sp/>values<sp/>that<sp/>are<sp/>represented<sp/>in<sp/>metadata<sp/>with<sp/>a<sp/>mismatched<sp/>type<sp/>(@stakx,<sp/>#371)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>a<sp/>concurrency<sp/>issue<sp/>(writing<sp/>without<sp/>taking<sp/>a<sp/>write<sp/>lock<sp/>first)<sp/>in<sp/>`BaseProxyGenerator.ObtainProxyType`<sp/>(@stakx,<sp/>#383)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Deprecations:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil.IsAnyByRef`<sp/>(@stakx,<sp/>#370)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.3.0<sp/>(2018-06-07)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enhancements:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>.NET<sp/>Standard/.NET<sp/>Core<sp/>support<sp/>for<sp/>NLog<sp/>(@snakefoot,<sp/>#200)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>.NET<sp/>Standard/.NET<sp/>Core<sp/>support<sp/>for<sp/>log4net<sp/>(@snakefoot,<sp/>#201)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>DynamicProxy<sp/>supported<sp/>C#<sp/>`in`<sp/>parameter<sp/>modifiers<sp/>only<sp/>on<sp/>the<sp/>.NET<sp/>Framework<sp/>up<sp/>until<sp/>now.<sp/>Adding<sp/>.NET<sp/>Standard<sp/>1.5<sp/>as<sp/>an<sp/>additional<sp/>target<sp/>to<sp/>the<sp/>NuGet<sp/>package<sp/>makes<sp/>them<sp/>work<sp/>on<sp/>.NET<sp/>Core,<sp/>too<sp/>(@stakx,<sp/>#339)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Replicate<sp/>custom<sp/>attributes<sp/>on<sp/>constructor<sp/>parameters<sp/>in<sp/>the<sp/>generated<sp/>proxy<sp/>type<sp/>constructors<sp/>to<sp/>fulfill<sp/>introspection<sp/>of<sp/>constructors.<sp/>This<sp/>does<sp/>not<sp/>change<sp/>the<sp/>proxying<sp/>behavior.<sp/>(@stakx,<sp/>#341)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Improve<sp/>performance<sp/>of<sp/>InvocationHelper<sp/>cache<sp/>lookups<sp/>(@tangdf,<sp/>#358)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Improve<sp/>fidelity<sp/>of<sp/>default<sp/>value<sp/>replication<sp/>of<sp/>optional<sp/>parameters<sp/>to<sp/>fulfill<sp/>inspection<sp/>of<sp/>the<sp/>generated<sp/>proxies.<sp/>This<sp/>does<sp/>not<sp/>change<sp/>the<sp/>proxying<sp/>behavior.<sp/>(@stakx,<sp/>#356)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Improve<sp/>cache<sp/>performance<sp/>of<sp/>MethodFinder.GetAllInstanceMethods<sp/>(@tangdf,<sp/>#357)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>Castle.Services.Logging.Log4netIntegration<sp/>assembly<sp/>file<sp/>name<sp/>casing<sp/>which<sp/>breaks<sp/>on<sp/>Linux<sp/>(@beginor,<sp/>#324)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>Castle.DynamicProxy.Generators.AttributesToAvoidReplicating<sp/>not<sp/>being<sp/>thread<sp/>safe<sp/>(InvalidOperationException<sp/>&quot;Collection<sp/>was<sp/>modified;<sp/>enumeration<sp/>operation<sp/>may<sp/>not<sp/>execute.&quot;)<sp/>(@BrunoJuchli,<sp/>#334)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>TraceLoggerFactory<sp/>to<sp/>allow<sp/>specifying<sp/>the<sp/>default<sp/>logger<sp/>level<sp/>(@acjh,<sp/>#342)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Ensure<sp/>that<sp/>DynamicProxy<sp/>doesn&apos;t<sp/>create<sp/>invalid<sp/>dynamic<sp/>assemblies<sp/>when<sp/>proxying<sp/>types<sp/>from<sp/>non-strong-named<sp/>assemblies<sp/>(@stakx,<sp/>#327)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>interceptor<sp/>selectors<sp/>being<sp/>passed<sp/>`System.RuntimeType`<sp/>for<sp/>class<sp/>proxies<sp/>instead<sp/>of<sp/>the<sp/>target<sp/>type<sp/>(@stakx,<sp/>#359)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Replace<sp/>NullReferenceException<sp/>with<sp/>descriptive<sp/>one<sp/>thrown<sp/>when<sp/>interceptors<sp/>swallow<sp/>exceptions<sp/>and<sp/>cause<sp/>a<sp/>null<sp/>value<sp/>type<sp/>to<sp/>be<sp/>returned<sp/>(@jonorossi,<sp/>#85)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.2.1<sp/>(2017-10-11)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Add<sp/>missing<sp/>equality<sp/>checks<sp/>in<sp/>`MethodSignatureComparer.EqualSignatureTypes`<sp/>to<sp/>fix<sp/>`TypeLoadException`s<sp/>(&quot;Method<sp/>does<sp/>not<sp/>have<sp/>an<sp/>implementation&quot;)<sp/>(@stakx,<sp/>#310)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Add<sp/>missing<sp/>XML<sp/>documentation<sp/>files<sp/>to<sp/>NuGet<sp/>packages<sp/>(@fir3pho3nixx,<sp/>#312)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.2.0<sp/>(2017-09-28)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enhancements:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Add<sp/>IProxyTargetAccessor.DynProxySetTarget<sp/>to<sp/>set<sp/>the<sp/>target<sp/>of<sp/>a<sp/>proxy<sp/>(@yallie,<sp/>#293)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Internal<sp/>dynamic<sp/>proxy<sp/>fields<sp/>are<sp/>now<sp/>private<sp/>instead<sp/>of<sp/>public<sp/>(@spencercw,<sp/>#260)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Make<sp/>ProxyUtil.IsAccessible(MethodBase)<sp/>take<sp/>into<sp/>account<sp/>declaring<sp/>type&apos;s<sp/>accessibility<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>report<sp/>false<sp/>negatives<sp/>for<sp/>e.g.<sp/>public<sp/>methods<sp/>in<sp/>inaccessible<sp/>classes.<sp/>(@stakx,<sp/>#289)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>InvalidCastException<sp/>calling<sp/>IChangeProxyTarget.ChangeProxyTarget<sp/>proxying<sp/>generic<sp/>interfaces<sp/>(@yallie,<sp/>#293)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Ignore<sp/>minor/patch<sp/>level<sp/>version<sp/>for<sp/>AssemblyVersionAttribute<sp/>as<sp/>this<sp/>creates<sp/>binding<sp/>errors<sp/>for<sp/>downstream<sp/>libraries<sp/>(@fir3pho3nixx,<sp/>#288)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>DictionaryAdapter<sp/>firing<sp/>NotifyPropertyChang(ed/ing)<sp/>events<sp/>after<sp/>CancelEdit<sp/>(@Lakritzator,<sp/>#299)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>ArgumentException<sp/>when<sp/>overriding<sp/>method<sp/>with<sp/>nested<sp/>generics<sp/>(@BitWizJason,<sp/>#297)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Explicit<sp/>package<sp/>versioning<sp/>applied<sp/>within<sp/>solution<sp/>to<sp/>avoid<sp/>maligned<sp/>NuGet<sp/>upgrades<sp/>for<sp/>lock<sp/>step<sp/>versioned<sp/>packages.<sp/>(@fir3pho3nixx,<sp/>#292)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Deprecations:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>IChangeProxyTarget.ChangeProxyTarget<sp/>is<sp/>deprecated<sp/>in<sp/>favor<sp/>of<sp/>IProxyTargetAccessor.DynProxySetTarget<sp/>(@yallie,<sp/>#293)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.1.1<sp/>(2017-07-12)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Prevent<sp/>member<sp/>name<sp/>collision<sp/>when<sp/>proxy<sp/>implements<sp/>same<sp/>generic<sp/>interface<sp/>more<sp/>than<sp/>twice<sp/>(@stakx,<sp/>#88)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>incorrect<sp/>replication<sp/>(reversed<sp/>order)<sp/>of<sp/>custom<sp/>modifiers<sp/>(modopts<sp/>and<sp/>modreqs)<sp/>on<sp/>the<sp/>CLR,<sp/>does<sp/>not<sp/>work<sp/>yet<sp/>on<sp/>Mono<sp/>(@stakx,<sp/>#277)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>COM<sp/>interface<sp/>proxy<sp/>error<sp/>case<sp/>throwing<sp/>exceptions<sp/>trying<sp/>to<sp/>release<sp/>null<sp/>pointer<sp/>from<sp/>QueryInterface<sp/>(@stakx,<sp/>#281)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.1.0<sp/>(2017-06-11)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Breaking<sp/>Changes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Remove<sp/>AllowPartiallyTrustedCallersAttribute,<sp/>which<sp/>wasn&apos;t<sp/>defined<sp/>by<sp/>default<sp/>(@fir3pho3nixx,<sp/>#241)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Upgrade<sp/>log4net<sp/>to<sp/>v2.0.8<sp/>(@fir3pho3nixx,<sp/>#241)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enhancements:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Add<sp/>ProxyUtil.IsAccessible<sp/>to<sp/>check<sp/>if<sp/>a<sp/>method<sp/>is<sp/>accessible<sp/>to<sp/>DynamicProxyGenAssembly2<sp/>(Blair<sp/>Conrad,<sp/>#235)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Refactor<sp/>build<sp/>engineering<sp/>to<sp/>support<sp/>AppVeyor<sp/>and<sp/>TravisCI<sp/>(@fir3pho3nixx,<sp/>#241)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>order<sp/>of<sp/>class<sp/>proxy<sp/>constructor<sp/>arguments<sp/>when<sp/>using<sp/>multiple<sp/>mixins<sp/>(@sebastienros,<sp/>#230)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>dependency<sp/>on<sp/>&quot;System.ComponentModel.TypeConverter&quot;<sp/>NuGet<sp/>package<sp/>version<sp/>that<sp/>does<sp/>not<sp/>exist<sp/>(#239)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>ParamArrayAttribute<sp/>not<sp/>being<sp/>replicated<sp/>in<sp/>proxy<sp/>(@stakx,<sp/>#121)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>System.Net.Mail.SmtpClient<sp/>is<sp/>obsolete<sp/>on<sp/>Mono<sp/>warning<sp/>(#254)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.0.0<sp/>(2017-01-25)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Breaking<sp/>Changes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Update<sp/>to<sp/>NLog<sp/>4.4.1<sp/>and<sp/>remove<sp/>beta<sp/>.NET<sp/>Core<sp/>support<sp/>for<sp/>NLog<sp/>(#228)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Update<sp/>to<sp/>log4net<sp/>2.0.7<sp/>(#229)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>CustomAttributeInfo.FromExpression<sp/>for<sp/>VB.NET<sp/>(@thomaslevesque,<sp/>#223)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.0.0-beta002<sp/>(2016-10-28)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Breaking<sp/>Changes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Rework<sp/>Serilog<sp/>integration<sp/>to<sp/>accept<sp/>an<sp/>ILogger<sp/>rather<sp/>than<sp/>a<sp/>LoggerConfiguration<sp/><sp/>to<sp/>work<sp/>correctly<sp/>with<sp/>Serilog<sp/>(#142,<sp/>#211)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Remove<sp/>obsolete<sp/>property<sp/>`AttributesToAddToGeneratedTypes`<sp/>from<sp/>`ProxyGenerationOptions`<sp/>(#219)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Change<sp/>type<sp/>of<sp/>`ProxyGenerationOptions.AdditionalAttributes`<sp/>to<sp/>`IList&lt;CustomAttributeInfo&gt;`<sp/>(#219)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Remove<sp/>`IAttributeDisassembler`<sp/>which<sp/>is<sp/>no<sp/>longer<sp/>necessary<sp/>(#219)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enhancements:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Add<sp/>IProxyGenerator<sp/>interface<sp/>for<sp/>the<sp/>ProxyGenerator<sp/>class<sp/>(#215)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Improve<sp/>default<sp/>list<sp/>of<sp/>attributes<sp/>to<sp/>avoid<sp/>replicating.<sp/>Code<sp/>Access<sp/>Security<sp/>attributes<sp/>and<sp/>MarshalAsAttribute<sp/>will<sp/>no<sp/>longer<sp/>be<sp/>replicated<sp/>(#221)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>building<sp/>on<sp/>Mono<sp/>4.6.1</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Different<sp/>attributes<sp/>in<sp/>`ProxyGenerationOptions.AdditionalAttributes`<sp/>now<sp/>generates<sp/>different<sp/>proxy<sp/>types<sp/>(#219)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.0.0-beta001<sp/>(2016-07-17)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Breaking<sp/>Changes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Update<sp/>to<sp/>log4net<sp/>1.2.15/2.0.5<sp/>(#199)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Update<sp/>to<sp/>NLog<sp/>4.4.0-beta13<sp/>(#199)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Update<sp/>to<sp/>Serilog<sp/>2.0.0<sp/>(#199)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enhancements:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>.NET<sp/>Core<sp/>1.0<sp/>and<sp/>.NET<sp/>Standard<sp/>1.3<sp/>support<sp/>(Jonathon<sp/>Rossi,<sp/>Jeremy<sp/>Meng)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Restore<sp/>DynamicDictionary<sp/>class</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>target<sp/>framework<sp/>moniker<sp/>in<sp/>NuGet<sp/>package<sp/>for<sp/>.NET<sp/>Core<sp/>(#174)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>4.0.0-alpha001<sp/>(2016-04-07)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Breaking<sp/>Changes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Remove<sp/>all<sp/>Silverlight<sp/>support<sp/>(#100,<sp/>#150)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Remove<sp/>DynamicProxy&apos;s<sp/>RemotableInvocation<sp/>and<sp/>remoting<sp/>support<sp/>for<sp/>invocations<sp/>(#110,<sp/>#65)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enhancements:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>.NET<sp/>Core<sp/>DNX<sp/>and<sp/>dotnet5.4<sp/>support<sp/>via<sp/>feature<sp/>conditional<sp/>compilation<sp/>(Jonathon<sp/>Rossi,<sp/>Jeremy<sp/>Meng)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Build<sp/>script<sp/>improvements<sp/>and<sp/>consolidate<sp/>version<sp/>numbers<sp/>(Blair<sp/>Conrad,<sp/>#75,<sp/>#152,<sp/>#153)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>&apos;System.ArgumentException:<sp/>Constant<sp/>does<sp/>not<sp/>match<sp/>the<sp/>defined<sp/>type&apos;<sp/>with<sp/>optional,<sp/>nullable<sp/>enum<sp/>method<sp/>parameters<sp/>(Daniel<sp/>Yankowsky,<sp/>#141,<sp/>#149)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>proxy<sp/>generation<sp/>hook<sp/>notification<sp/>for<sp/>virtual<sp/>but<sp/>final<sp/>methods<sp/>(Axel<sp/>Heer,<sp/>#148)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>InvalidCastException<sp/>with<sp/>custom<sp/>attribute<sp/>having<sp/>an<sp/>enum<sp/>array<sp/>parameter<sp/>with<sp/>non-int<sp/>enum<sp/>(@csharper2010,<sp/>#104,<sp/>#105)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Update<sp/>to<sp/>Mono<sp/>4.0.2<sp/>and<sp/>improve<sp/>Mono<sp/>support<sp/>(#79,<sp/>#95,<sp/>#102)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>&apos;System.ArrayTypeMismatchException:<sp/>Source<sp/>array<sp/>type<sp/>cannot<sp/>be<sp/>assigned<sp/>to<sp/>destination<sp/>array<sp/>type&apos;<sp/>on<sp/>Mono<sp/>(#81)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>&apos;System.ArgumentException:<sp/>System.Decimal<sp/>is<sp/>not<sp/>a<sp/>supported<sp/>constant<sp/>type&apos;<sp/>with<sp/>optional<sp/>method<sp/>parameters<sp/>(@fknx,<sp/>#87,<sp/>#91)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>ProxyGenerator<sp/>cache<sp/>does<sp/>not<sp/>take<sp/>into<sp/>account<sp/>AdditionalAttributes<sp/>(@cmerat,<sp/>#77,<sp/>#78)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>Castle.Services.Logging.SerilogIntegration.dll<sp/>missing<sp/>some<sp/>assembly<sp/>info<sp/>attributes<sp/>(@imzshh,<sp/>#20,<sp/>#82)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.3.3<sp/>(2014-11-06)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fix<sp/>Serilog<sp/>integration<sp/>modifies<sp/>LoggerConfiguration.MinimumLevel<sp/>(#70)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Add<sp/>SourceContext<sp/>to<sp/>the<sp/>Serilog<sp/>logger<sp/>(@KevivL,<sp/>#69)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.3.2<sp/>(2014-11-03)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>#66<sp/>-<sp/>SerilogLogger<sp/>implementation<sp/>bug<sp/>where<sp/>exceptions<sp/>were<sp/>passed<sp/>through<sp/>incorrectly</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.3.1<sp/>(2014-09-10)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>implemented<sp/>#61<sp/>-<sp/>Added<sp/>support<sp/>for<sp/>Serilog<sp/>-<sp/>contributed<sp/>by<sp/>Russell<sp/>J<sp/>Baker<sp/>(@ruba1987)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.3.0<sp/>(2014-04-27)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>implemented<sp/>#51<sp/>-<sp/>removed<sp/>abandoned<sp/>projects:<sp/>Binder,<sp/>Pagination,<sp/>Validator</highlight></codeline>
<codeline><highlight class="normal">-<sp/>implemented<sp/>#49<sp/>-<sp/>build<sp/>NuGet<sp/>and<sp/>Zip<sp/>packages<sp/>from<sp/>TeamCity<sp/>-<sp/>contributed<sp/>by<sp/>Blair<sp/>Conrad<sp/>(@blairconrad)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>implemented<sp/>#42<sp/>-<sp/>move<sp/>complicated<sp/>BuildInternalsVisibleMessageForType<sp/>method<sp/>out<sp/>of<sp/>DynamicProxyBuilder<sp/>-<sp/>contributed<sp/>by<sp/>Blair<sp/>Conrad<sp/>(@blairconrad)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>#47<sp/>-<sp/>Calling<sp/>DynamicProxy<sp/>proxy<sp/>methods<sp/>with<sp/>multidimensional<sp/>array<sp/>parameters<sp/>-<sp/>contributed<sp/>by<sp/><sp/>Ed<sp/>Parcell<sp/>(@edparcell)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>#44<sp/>-<sp/>DictionaryAdapter<sp/>FetchAttribute<sp/>on<sp/>type<sp/>has<sp/>no<sp/>effect</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>#34<sp/>and<sp/>#39<sp/>-<sp/>inaccessible<sp/>type<sp/>parameters<sp/>should<sp/>give<sp/>better<sp/>error<sp/>messages<sp/>-<sp/>contributed<sp/>by<sp/>Blair<sp/>Conrad<sp/>(@blairconrad)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.2.2<sp/>(2013-11-30)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>#35<sp/>-<sp/>ParameterBuilder.SetConstant<sp/>fails<sp/>when<sp/>using<sp/>a<sp/>default<sp/>value<sp/>of<sp/>null<sp/>-<sp/>contributed<sp/>by<sp/>(@jonasro)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.2.1<sp/>(2013-10-05)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>#32<sp/>-<sp/>Improve<sp/>configuration<sp/>of<sp/>SmtpClient<sp/>in<sp/>sync<sp/>sending<sp/>-<sp/>contributed<sp/>by<sp/>Artur<sp/>Dorochowicz<sp/>(@ArturDorochowicz)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>#31<sp/>-<sp/>[DynamicProxy]<sp/>Preserve<sp/>DefaultValues<sp/>of<sp/>proxied<sp/>method&apos;s<sp/>parameters<sp/>(in<sp/>.NET<sp/>4.5)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>#30<sp/>-<sp/>tailoring<sp/>InternalsVisibleTo<sp/>message<sp/>based<sp/>on<sp/>assembly<sp/>of<sp/>inaccessible<sp/>type<sp/>-<sp/>contributed<sp/>by<sp/>Blair<sp/>Conrad<sp/>(@blairconrad)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>#27<sp/>-<sp/>Allow<sp/>dynamic<sp/>proxy<sp/>of<sp/>generic<sp/>interfaces<sp/>which<sp/>have<sp/>generic<sp/>methods,<sp/>under<sp/>Mono<sp/>2.10.8<sp/>and<sp/>Mono<sp/>3.0.6<sp/>-<sp/>contributed<sp/>by<sp/>Iain<sp/>Ballard<sp/>(@i-e-b)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>#26<sp/>-<sp/>Proxy<sp/>of<sp/>COM<sp/>class<sp/>issue,<sp/>reference<sp/>count<sp/>incremented<sp/>-<sp/>contributed<sp/>by<sp/>Jean-Claude<sp/>Viau<sp/>(@jcviau)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-188<sp/>-<sp/>CreateInterfaceProxyWithoutTarget<sp/>fails<sp/>with<sp/>interface<sp/>containing<sp/>member<sp/>with<sp/>&apos;ref<sp/>UIntPtr&apos;<sp/>-<sp/>contributed<sp/>by<sp/>Pier<sp/>Janssen<sp/>(@Pjanssen)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-186<sp/>-<sp/>.Net<sp/>remoting<sp/>(transparent<sp/>proxy)<sp/>cannot<sp/>be<sp/>proxied<sp/>-<sp/>contributed<sp/>by<sp/>Jean-Claude<sp/>Viau<sp/>(@jcviau)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-185<sp/>-<sp/>ProxyUtil.GetUnproxiedInstance<sp/>returns<sp/>proxy<sp/>object<sp/>for<sp/>ClassProxyWithTarget<sp/>instead<sp/>of<sp/>its<sp/>target<sp/>-<sp/>contributed<sp/>by<sp/>Dmitry<sp/>Xlestkov<sp/>(@d-s-x)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.2.0<sp/>(2013-02-16)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-179<sp/>-<sp/>Exception<sp/>when<sp/>creating<sp/>a<sp/>generic<sp/>proxy<sp/>(from<sp/>cache)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-175<sp/>-<sp/>invalid<sp/>CompositionInvocation<sp/>type<sp/>used<sp/>when<sp/>code<sp/>uses<sp/>interface<sp/>proxies<sp/>with<sp/>and<sp/>without<sp/>InterceptorSelector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.1.0<sp/>(2012-08-05)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-174<sp/>-<sp/>Unable<sp/>to<sp/>cast<sp/>object<sp/>of<sp/>type<sp/>&apos;System.Collections.ObjectModel.ReadOnlyCollection\`1[System.Reflection.CustomAttributeTypedArgument]&apos;<sp/>to<sp/>type<sp/>&apos;System.Array&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.1.0<sp/>RC<sp/>(2012-07-08)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>support<sp/>multiple<sp/>inheritance<sp/>of<sp/>DA<sp/>attributes<sp/>on<sp/>interfaces.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>BREAKING<sp/>CHANGE:<sp/>removed<sp/>propagated<sp/>child<sp/>notifications<sp/>as<sp/>it<sp/>violated<sp/>INotifyPropertyChanged<sp/>contract</highlight></codeline>
<codeline><highlight class="normal">-<sp/>improved<sp/>DictionaryAdapter<sp/>performance</highlight></codeline>
<codeline><highlight class="normal">-<sp/>generalized<sp/>IBindingList<sp/>support<sp/>for<sp/>DictionaryAdapters</highlight></codeline>
<codeline><highlight class="normal">-<sp/>added<sp/>reference<sp/>support<sp/>to<sp/>XmlAdapter</highlight></codeline>
<codeline><highlight class="normal">-<sp/>BREAKING<sp/>CHANGE:<sp/>refactored<sp/>XPathAdapter<sp/>into<sp/>XmlAdapter<sp/>with<sp/>much<sp/>more<sp/>flexibility<sp/>to<sp/>support<sp/>other<sp/>input<sp/>like<sp/>XLinq</highlight></codeline>
<codeline><highlight class="normal">-<sp/>implemented<sp/>CORE-43<sp/>-<sp/>Add<sp/>option<sp/>to<sp/>skip<sp/>configuring<sp/>log4net/nlog</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>CORE-44<sp/>-<sp/>NLog<sp/>logger<sp/>does<sp/>not<sp/>preserver<sp/>call<sp/>site<sp/>info</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-171<sp/>-<sp/>PEVerify<sp/>error<sp/>on<sp/>generic<sp/>method<sp/>definition</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-170<sp/>-<sp/>Calls<sp/>to<sp/>properties<sp/>inside<sp/>non-intercepted<sp/>methods<sp/>are<sp/>not<sp/>forwarded<sp/>to<sp/>target<sp/>object<sp/>(regression<sp/>from<sp/>v2.5)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-169<sp/>-<sp/>Support<sp/>IChangeProxyTarget<sp/>on<sp/>additional<sp/>interfaces<sp/>and<sp/>mixins<sp/>when<sp/>using<sp/>CreateInterfaceProxyWithTargetInterface</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.0.0<sp/>(2011-12-13)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>no<sp/>major<sp/>changes<sp/>since<sp/>RC</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.0.0<sp/>RC<sp/>1<sp/>(2011-11-20)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Applied<sp/>Jeff<sp/>Sharps<sp/>patch<sp/>that<sp/>refactored<sp/>Xml<sp/>DictionaryAdapter<sp/>to<sp/>improve<sp/>maintainability<sp/>and<sp/>enable<sp/>more<sp/>complete<sp/>functionality</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-165<sp/>-<sp/>Object.GetType()<sp/>and<sp/>Object.MemberwiseClone()<sp/>should<sp/>be<sp/>ignored<sp/>and<sp/>not<sp/>reported<sp/>as<sp/>non-interceptable<sp/>to<sp/>IProxyGenerationHook</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-164<sp/>-<sp/>Invalid<sp/>Proxy<sp/>type<sp/>generated<sp/>when<sp/>there<sp/>are<sp/>more<sp/>than<sp/>one<sp/>base<sp/>class<sp/>generic<sp/>constraints</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-162<sp/>-<sp/>ref<sp/>or<sp/>out<sp/>parameters<sp/>can<sp/>not<sp/>be<sp/>passed<sp/>back<sp/>if<sp/>proxied<sp/>method<sp/>throw<sp/>an<sp/>exception</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>3.0.0<sp/>beta<sp/>1<sp/>(2011-08-14)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Breaking<sp/>Changes:</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Removed<sp/>overloads<sp/>of<sp/>logging<sp/>methods<sp/>that<sp/>were<sp/>taking<sp/>format<sp/>string<sp/>from<sp/>ILogger<sp/>and<sp/>ILogger<sp/>and<sp/>IExtendedLogger<sp/>and<sp/>didn&apos;t<sp/>have<sp/>word<sp/>Format<sp/>in<sp/>their<sp/>name.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>For<sp/>example:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>void<sp/>Error(string<sp/>format,<sp/>params<sp/>object[]<sp/>args);<sp/>//<sp/>was<sp/>removed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>void<sp/>ErrorFormat(string<sp/>format,<sp/>params<sp/>object[]<sp/>args);<sp/>//use<sp/>this<sp/>one<sp/>instead</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>impact<sp/>-<sp/>low</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>fixability<sp/>-<sp/>medium</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>description<sp/>-<sp/>To<sp/>minimize<sp/>confusion<sp/>and<sp/>duplication<sp/>those<sp/>methods<sp/>were<sp/>removed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>fix<sp/>-<sp/>Use<sp/>methods<sp/>that<sp/>have<sp/>explicit<sp/>&quot;Format&quot;<sp/>word<sp/>in<sp/>their<sp/>name<sp/>and<sp/>same<sp/>signature.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Removed<sp/>WebLogger<sp/>and<sp/>WebLoggerFactory</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>impact<sp/>-<sp/>low</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>fixability<sp/>-<sp/>medium</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>description<sp/>-<sp/>To<sp/>minimize<sp/>management<sp/>overhead<sp/>the<sp/>classes<sp/>were<sp/>removed<sp/>so<sp/>that<sp/>only<sp/>single<sp/>Client<sp/>Profile<sp/>version<sp/>of<sp/>Castle.Core<sp/>can<sp/>be<sp/>distributed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>fix<sp/>-<sp/>You<sp/>can<sp/>use<sp/>NLog<sp/>or<sp/>Log4Net<sp/>web<sp/>logger<sp/>integration,<sp/>or<sp/>reuse<sp/>implementation<sp/>of<sp/>existing<sp/>web<sp/>logger<sp/>and<sp/>use<sp/>it<sp/>as<sp/>a<sp/>custom<sp/>logger.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Removed<sp/>obsolete<sp/>overload<sp/>of<sp/>ProxyGenerator.CreateClassProxy</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>impact<sp/>-<sp/>low</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>fixability<sp/>-<sp/>trivial</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>description<sp/>-<sp/>Deprecated<sp/>overload<sp/>of<sp/>ProxyGenerator.CreateClassProxy<sp/>was<sp/>removed<sp/>to<sp/>keep<sp/>the<sp/>method<sp/>consistent<sp/>with<sp/>other<sp/>methods<sp/>and<sp/>to<sp/>remove<sp/>confusion</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>fix<sp/>-<sp/>whenever<sp/>removed<sp/>overload<sp/>was<sp/>used,<sp/>use<sp/>one<sp/>of<sp/>the<sp/>other<sp/>overloads.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>IProxyGenerationHook.NonVirtualMemberNotification<sp/>method<sp/>was<sp/>renamed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>impact<sp/>-<sp/>high</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>fixability<sp/>-<sp/>easy</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>description<sp/>-<sp/>to<sp/>accommodate<sp/>class<sp/>proxies<sp/>with<sp/>target<sp/>method<sp/>NonVirtualMemberNotification<sp/>on<sp/>IProxyGenerationHook<sp/>type<sp/>was<sp/>renamed<sp/>to<sp/>more<sp/>accurate</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NonProxyableMemberNotification<sp/><sp/>since<sp/>for<sp/>class<sp/>proxies<sp/>with<sp/>target<sp/>not<sp/>just<sp/>methods<sp/>but<sp/>also<sp/>fields<sp/>and<sp/>other<sp/>member<sp/>that<sp/>break<sp/>the<sp/>abstraction<sp/>will</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>be<sp/>passed<sp/>to<sp/>this<sp/>method.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>fix<sp/>-<sp/>whenever<sp/>NonVirtualMemberNotification<sp/>is<sp/>used/implemented<sp/>change<sp/>the<sp/>method<sp/>name<sp/>to</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NonProxyableMemberNotification.<sp/>Implementors<sp/>should<sp/>also<sp/>accommodate<sp/>possibility<sp/>that<sp/>not</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>MethodInfos<sp/>will<sp/>be<sp/>passed<sp/>as<sp/>method&apos;s<sp/>second<sp/>parameter.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>DynamicProxy<sp/>will<sp/>now<sp/>allow<sp/>to<sp/>intercept<sp/>members<sp/>of<sp/>System.Object</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>impact<sp/>-<sp/>very<sp/>low</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>fixability<sp/>-<sp/>easy</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>description<sp/>-<sp/>to<sp/>allow<sp/>scenarios<sp/>like<sp/>mocking<sp/>of<sp/>System.Object<sp/>members,<sp/>DynamicProxy<sp/>will<sp/>not</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>disallow<sp/>proxying<sp/>of<sp/>these<sp/>methods<sp/>anymore.<sp/>AllMethodsHook<sp/>(default<sp/>IProxyGenerationHook)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>still<sp/>filter<sp/>them<sp/>out<sp/>though.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>fix<sp/>-<sp/>whenever<sp/>custom<sp/>IProxyGenerationHook<sp/>is<sp/>used,<sp/>user<sp/>should<sp/>account<sp/>for<sp/>System.Object&apos;s</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>members<sp/>being<sp/>now<sp/>passed<sp/>to<sp/>ShouldInterceptMethod<sp/>and<sp/>NonVirtualMemberNotification<sp/>methods</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>if<sp/>necessary<sp/>update<sp/>the<sp/>code<sp/>to<sp/>handle<sp/>them<sp/>appropriately.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Bugfixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>CORE-37<sp/>-<sp/>TAB<sp/>characters<sp/>in<sp/>the<sp/>XML<sp/>Configuration<sp/>of<sp/>a<sp/>component<sp/>parameter<sp/>is<sp/>read<sp/>as<sp/>String.Empty</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-161<sp/>-<sp/>Strong<sp/>Named<sp/>DynamicProxy<sp/>Assembly<sp/>Not<sp/>Available<sp/>in<sp/>Silverlight</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-159<sp/>-<sp/>Sorting<sp/>MemberInfo<sp/>array<sp/>for<sp/>serialization<sp/>has<sp/>side<sp/>effects</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-158<sp/>-<sp/>Can&apos;t<sp/>create<sp/>class<sp/>proxy<sp/>with<sp/>target<sp/>and<sp/>without<sp/>target<sp/>in<sp/>same<sp/>ProxyGenerator</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-153<sp/>-<sp/>When<sp/>proxying<sp/>a<sp/>generic<sp/>interface<sp/>which<sp/>has<sp/>an<sp/>interface<sp/>as<sp/>GenericType<sp/>.<sp/>No<sp/>proxy<sp/>can<sp/>be<sp/>created</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-151<sp/>-<sp/>Cast<sp/>error<sp/>when<sp/>using<sp/>attributes<sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>implemented<sp/>CORE-33<sp/>-<sp/>Add<sp/>lazy<sp/>logging</highlight></codeline>
<codeline><highlight class="normal">-<sp/>implemented<sp/>DYNPROXY-156<sp/>-<sp/>Provide<sp/>mechanism<sp/>for<sp/>interceptors<sp/>to<sp/>implement<sp/>retry<sp/>logic</highlight></codeline>
<codeline><highlight class="normal">-<sp/>removed<sp/>obsolete<sp/>members<sp/>from<sp/>ILogger<sp/>and<sp/>its<sp/>implementations</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>2.5.2<sp/>(2010-11-15)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-150<sp/>-<sp/>Finalizer<sp/>should<sp/>not<sp/>be<sp/>proxied</highlight></codeline>
<codeline><highlight class="normal">-<sp/>implemented<sp/>DYNPROXY-149<sp/>-<sp/>Make<sp/>AllMethodsHook<sp/>members<sp/>virtual<sp/>so<sp/>it<sp/>can<sp/>be<sp/>used<sp/>as<sp/>a<sp/>base<sp/>class</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-147<sp/>-<sp/>Can&apos;t<sp/>create<sp/>class<sp/>proxies<sp/>with<sp/>two<sp/>non-public<sp/>methods<sp/>having<sp/>same<sp/>argument<sp/>types<sp/>but<sp/>different<sp/>return<sp/>type</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-145<sp/>Unable<sp/>to<sp/>proxy<sp/>System.Threading.SynchronizationContext<sp/>(.NET<sp/>4.0)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-144<sp/>-<sp/>params<sp/>argument<sp/>not<sp/>supported<sp/>in<sp/>constructor</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-143<sp/>-<sp/>Permit<sp/>call<sp/>to<sp/>reach<sp/>&quot;non-proxied&quot;<sp/>methods<sp/>of<sp/>inherited<sp/>interfaces</highlight></codeline>
<codeline><highlight class="normal">-<sp/>implemented<sp/>DYNPROXY-139<sp/>-<sp/>Better<sp/>error<sp/>message<sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-133<sp/>-<sp/>Debug<sp/>assertion<sp/>in<sp/>ClassProxyInstanceContributor<sp/>fails<sp/>when<sp/>proxying<sp/>ISerializable<sp/>with<sp/>an<sp/>explicit<sp/>implementation<sp/>of<sp/>GetObjectData</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>CORE-32<sp/>-<sp/>Determining<sp/>if<sp/>permission<sp/>is<sp/>granted<sp/>via<sp/>PermissionUtil<sp/>does<sp/>not<sp/>work<sp/>in<sp/>.NET<sp/>4</highlight></codeline>
<codeline><highlight class="normal">-<sp/>applied<sp/>patch<sp/>by<sp/>Alwin<sp/>Meijs<sp/>-<sp/>ExtendedLog4netFactory<sp/>can<sp/>be<sp/>configured<sp/>with<sp/>a<sp/>stream<sp/>from<sp/>for<sp/>example<sp/>an<sp/>embedded<sp/>log4net<sp/>xml<sp/>config</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Upgraded<sp/>NLog<sp/>to<sp/>2.0<sp/>Beta<sp/>1</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>DefaultXmlSerializer<sp/>to<sp/>bridge<sp/>XPathAdapter<sp/>with<sp/>standard<sp/>Xml<sp/>Serialization.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>XPathAdapter<sp/>for<sp/>DictionaryAdapter<sp/>added<sp/>IXPathSerializer<sp/>to<sp/>provide<sp/>hooks<sp/>for<sp/>custom<sp/>serialization.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>2.5.1<sp/>(2010-09-21)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Interface<sp/>proxy<sp/>with<sp/>target<sp/>Interface<sp/>now<sp/>accepts<sp/>null<sp/>as<sp/>a<sp/>valid<sp/>target<sp/>value<sp/>(which<sp/>can<sp/>be<sp/>replaced<sp/>at<sp/>a<sp/>later<sp/>stage).</highlight></codeline>
<codeline><highlight class="normal">-<sp/>DictionaryAdapter<sp/>behavior<sp/>overrides<sp/>are<sp/>now<sp/>ordered<sp/>with<sp/>all<sp/>other<sp/>behaviors</highlight></codeline>
<codeline><highlight class="normal">-<sp/>BREAKING<sp/>CHANGE:<sp/>removed<sp/>web<sp/>logger<sp/>so<sp/>that<sp/>by<sp/>default<sp/>Castle.Core<sp/>works<sp/>in<sp/>.NET<sp/>4<sp/>client<sp/>profile</highlight></codeline>
<codeline><highlight class="normal">-<sp/>added<sp/>parameter<sp/>to<sp/>ModuleScope<sp/>disabling<sp/>usage<sp/>of<sp/>signed<sp/>modules.<sp/>This<sp/>is<sp/>to<sp/>workaround<sp/>issue<sp/>DYNPROXY-134.<sp/>Also<sp/>a<sp/>descriptive<sp/>exception<sp/>message<sp/>is<sp/>being<sp/>thrown<sp/>now<sp/>when<sp/>the<sp/>issue<sp/>is<sp/>detected.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>IDictionaryBehaviorBuilder<sp/>to<sp/>allow<sp/>grouping<sp/>behaviors</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>GenericDictionaryAdapter<sp/>to<sp/>simplify<sp/>generic<sp/>value<sp/>sources</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>issue<sp/>DYNPROXY-138<sp/>-<sp/>Error<sp/>message<sp/>missing<sp/>space</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>false<sp/>positive<sp/>where<sp/>DynamicProxy<sp/>would<sp/>not<sp/>let<sp/>you<sp/>proxy<sp/>interface<sp/>with<sp/>target<sp/>interface<sp/>when<sp/>target<sp/>object<sp/>was<sp/>a<sp/>COM<sp/>object.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>ReflectionBasedDictionaryAdapter<sp/>when<sp/>using<sp/>indexed<sp/>properties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>2.5.0<sp/>(2010-08-21)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>DynamicProxy<sp/>will<sp/>now<sp/>not<sp/>replicate<sp/>non-public<sp/>attribute<sp/>types</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Applied<sp/>patch<sp/>from<sp/>Kenneth<sp/>Siewers<sp/>Møller<sp/>which<sp/>adds<sp/>parameterless<sp/>constructor<sp/>to<sp/>DefaultSmtpSender<sp/>implementation,<sp/>to<sp/>be<sp/>able<sp/>to<sp/>configure<sp/>the<sp/>inner<sp/>SmtpClient<sp/>from<sp/>the<sp/>application<sp/>configuration<sp/>file<sp/>(system.net.smtp).</highlight></codeline>
<codeline><highlight class="normal">-<sp/>added<sp/>support<sp/>for<sp/>.NET<sp/>4<sp/>and<sp/>Silverlight<sp/>4,<sp/>updated<sp/>solution<sp/>to<sp/>VisualStudio<sp/>2010</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Removed<sp/>obsolete<sp/>overload<sp/>of<sp/>CreateClassProxy</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>class<sp/>proxy<sp/>with<sp/>target</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>ability<sp/>to<sp/>intercept<sp/>explicitly<sp/>implemented<sp/>generic<sp/>interface<sp/>methods<sp/>on<sp/>class<sp/>proxy.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>DynamicProxy<sp/>does<sp/>not<sp/>disallow<sp/>intercepting<sp/>members<sp/>of<sp/>System.Object<sp/>anymore.<sp/>AllMethodsHook<sp/>will<sp/>still<sp/>filter<sp/>them<sp/>out<sp/>though.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>ability<sp/>to<sp/>intercept<sp/>explicitly<sp/>implemented<sp/>interface<sp/>members<sp/>on<sp/>class<sp/>proxy.<sp/>Does<sp/>not<sp/>support<sp/>generic<sp/>members.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Merged<sp/>DynamicProxy<sp/>into<sp/>Core<sp/>binary</highlight></codeline>
<codeline><highlight class="normal">-<sp/>fixed<sp/>DYNPROXY-ISSUE-132<sp/>-<sp/>&quot;MetaProperty<sp/>equals<sp/>implementation<sp/>incorrect&quot;</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fixed<sp/>bug<sp/>in<sp/>DiagnosticsLoggerTestCase,<sp/>where<sp/>when<sp/>running<sp/>as<sp/>non-admin,<sp/>the<sp/>teardown<sp/>will<sp/>throw<sp/>SecurityException<sp/>(contributed<sp/>by<sp/>maxild)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Split<sp/>IoC<sp/>specific<sp/>classes<sp/>into<sp/>Castle.Windsor<sp/>project</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Merged<sp/>logging<sp/>services<sp/>solution</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Merged<sp/>DynamicProxy<sp/>project</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>1.2.0<sp/>(2010-01-11)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>IEmailSender<sp/>interface<sp/>and<sp/>its<sp/>default<sp/>implementation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>1.2.0<sp/>beta<sp/>(2009-12-04)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>BREAKING<sp/>CHANGE<sp/>-<sp/>added<sp/>ChangeProxyTarget<sp/>method<sp/>to<sp/>IChangeProxyTarget<sp/>interface</highlight></codeline>
<codeline><highlight class="normal">-<sp/>added<sp/>docs<sp/>to<sp/>IChangeProxyTarget<sp/>methods</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Fixed<sp/>DYNPROXY-ISSUE-108<sp/>-<sp/>Obtaining<sp/>replicated<sp/>custom<sp/>attributes<sp/>on<sp/>proxy<sp/>may<sp/>fail<sp/>when<sp/>property<sp/>setter<sp/>throws<sp/>exception<sp/>on<sp/>default<sp/>value</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Moved<sp/>custom<sp/>attribute<sp/>replication<sp/>from<sp/>CustomAttributeUtil<sp/>to<sp/>new<sp/>interface<sp/>-<sp/>IAttributeDisassembler</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Exposed<sp/>IAttributeDisassembler<sp/>via<sp/>ProxyGenerationOptions,<sp/>so<sp/>that<sp/>users<sp/>can<sp/>plug<sp/>their<sp/>implementation<sp/>for<sp/>some<sp/>convoluted<sp/>scenarios.<sp/>(for<sp/>Silverlight)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Moved<sp/>IInterceptorSelector<sp/>from<sp/>Dynamic<sp/>Proxy<sp/>to<sp/>Core<sp/>(IOC-ISSUE-156)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>1.1.0<sp/>(2009-05-04)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Applied<sp/>Eric<sp/>Hauser&apos;s<sp/>patch<sp/>fixing<sp/>CORE-ISSUE-22</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&quot;Support<sp/>for<sp/>environment<sp/>variables<sp/>in<sp/>resource<sp/>URI&quot;</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Applied<sp/>Gauthier<sp/>Segay&apos;s<sp/>patch<sp/>fixing<sp/>CORE-ISSUE-20</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&quot;Castle.Core.Tests<sp/>won&apos;t<sp/>build<sp/>via<sp/>nant<sp/>because<sp/>it<sp/>use<sp/>TraceContext<sp/>without<sp/>referencing<sp/>System.Web.dll&quot;</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>simple<sp/>interface<sp/>to<sp/>ComponentModel<sp/>to<sp/>make<sp/>optional<sp/>properties<sp/>required.<sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>Applied<sp/>Mark&apos;s<sp/>--<sp/>&lt;mwatts42@gmail.com&gt;<sp/>--<sp/>patch<sp/>that<sp/>changes<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>Core<sp/>to<sp/>support<sp/>being<sp/>compiled<sp/>for<sp/>Silverlight<sp/>2</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Applied<sp/>Louis<sp/>DeJardin&apos;s<sp/>patch<sp/>adding<sp/>TraceLogger<sp/>as<sp/>a<sp/>new<sp/>logger<sp/>implementation</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Applied<sp/>Chris<sp/>Bilson&apos;s<sp/>patch<sp/>fixing<sp/>CORE-15</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&quot;WebLogger<sp/>Throws<sp/>When<sp/>Logging<sp/>Outside<sp/>of<sp/>an<sp/>HttpContext&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Release<sp/>Candidate<sp/>3</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>IServiceProviderEx<sp/>which<sp/>extends<sp/>IServiceProvider</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>Pair&lt;T,S&gt;<sp/>class.<sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>Applied<sp/>Bill<sp/>Pierce&apos;s<sp/>patch<sp/>fixing<sp/>CORE-9<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&quot;Allow<sp/>CastleComponent<sp/>Attribute<sp/>to<sp/>Specify<sp/>Lifestyle<sp/>in<sp/>Constructor&quot;</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>UseSingleInterfaceProxy<sp/>to<sp/>CompomentModel<sp/>to<sp/>control<sp/>the<sp/>proxying</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>behavior<sp/>while<sp/>maintaining<sp/>backward<sp/>compatibility.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Added<sp/>the<sp/>corresponding<sp/>ComponentProxyBehaviorAttribute.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Made<sp/>NullLogger<sp/>and<sp/>IExtnededLogger</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Enabled<sp/>a<sp/>new<sp/>format<sp/>on<sp/>ILogger<sp/>interface,<sp/>with<sp/>6<sp/>overloads<sp/>for<sp/>each<sp/>method:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Debug(string)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Debug(string,<sp/>Exception)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Debug(string,<sp/>params<sp/>object[])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>DebugFormat(string,<sp/>params<sp/>object[])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>DebugFormat(Exception,<sp/>string,<sp/>params<sp/>object[])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>DebugFormat(IFormatProvider,<sp/>string,<sp/>params<sp/>object[])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>DebugFormat(IFormatProvider,<sp/>Exception,<sp/>string,<sp/>params<sp/>object[])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>The<sp/>&quot;FatalError&quot;<sp/>overloads<sp/>where<sp/>marked<sp/>as<sp/>[Obsolete],<sp/>replaced<sp/>by<sp/>&quot;Fatal&quot;<sp/>and<sp/>&quot;FatalFormat&quot;.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>0.0.1.0</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Included<sp/>IProxyTargetAccessor</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Removed<sp/>IMethodInterceptor<sp/>and<sp/>IMethodInvocation,<sp/>that<sp/>have<sp/>been<sp/>replaced<sp/>by<sp/>IInterceptor<sp/>and<sp/>IInvocation</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>FindByPropertyInfo<sp/>to<sp/>PropertySetCollection</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Made<sp/>the<sp/>DependencyModel.IsOptional<sp/>property<sp/>writable</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Applied<sp/>Curtis<sp/>Schlak&apos;s<sp/>patch<sp/>fixing<sp/>IOC-27</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&quot;assembly<sp/>resource<sp/>format<sp/>only<sp/>works<sp/>for<sp/>resources<sp/>where<sp/>the<sp/>assemblies<sp/>name<sp/>and<sp/>default<sp/>namespace<sp/>are<sp/>the<sp/>same.&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Quoting:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>&quot;I<sp/>chose<sp/>to<sp/>preserve<sp/>backwards<sp/>compatibility<sp/>by<sp/>implementing<sp/>the<sp/>code<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>reverse<sp/>order<sp/>as<sp/>suggested<sp/>by<sp/>the<sp/>reporter.<sp/>Given<sp/>the<sp/>following<sp/>URI<sp/>for<sp/>a<sp/>resource:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>assembly://my.cool.assembly/context/moo/file.xml</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>It<sp/>will<sp/>initially<sp/>look<sp/>for<sp/>an<sp/>embedded<sp/>resource<sp/>with<sp/>the<sp/>manifest<sp/>name<sp/>of<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&quot;my.cool.assembly.context.moo.file.xml&quot;<sp/>in<sp/>the<sp/>loaded<sp/>assembly<sp/>my.cool.assembly.dll.<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>If<sp/>it<sp/>does<sp/>not<sp/>find<sp/>it,<sp/>then<sp/>it<sp/>looks<sp/>for<sp/>the<sp/>embedded<sp/>resource<sp/>with<sp/>the<sp/>manifest<sp/>name<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>of<sp/>&quot;context.moo.file.xml&quot;.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>IServiceEnabledComponent<sp/>Introduced<sp/>to<sp/>be<sp/>used<sp/>across<sp/>the<sp/>project<sp/>as</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>a<sp/>standard<sp/>way<sp/>to<sp/>have<sp/>access<sp/>to<sp/>common<sp/>services,<sp/>for<sp/>example,<sp/>logger<sp/>factories</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Added<sp/>missing<sp/>log<sp/>factories</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Refactor<sp/>StreamLogger<sp/>and<sp/>DiagnosticLogger<sp/>to<sp/>be<sp/>more<sp/>consistent<sp/>behavior-wise</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Refactored<sp/>WebLogger<sp/>to<sp/>extend<sp/>LevelFilteredLogger<sp/>(removed<sp/>duplication)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Refactored<sp/>LoggerLevel<sp/>order</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Project<sp/>started</highlight></codeline>
    </programlisting>
    <location file="packages/Castle.Core.5.1.1/CHANGELOG.md"/>
  </compounddef>
</doxygen>
